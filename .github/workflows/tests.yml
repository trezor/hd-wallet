name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-
    - run: yarn install
  
  flow:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    - run: yarn flow

  eslint:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
    steps:
    - uses: actions/checkout@v2
    - name: Load node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    - run: yarn eslint

  build-example:
    needs: ["flow", "eslint"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
    steps:
    - uses: actions/checkout@v2
    - name: Load node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    - run: yarn build-example

  unit:
    needs: ["flow", "eslint"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
    steps:
    - uses: actions/checkout@v2
    - name: Load node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    - run: yarn unit

  coverage:
    needs: ["flow", "eslint"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
    steps:
    - uses: actions/checkout@v2
    - name: Load node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    - run: yarn coverage

  fastxpub:
    needs: ["flow", "eslint"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
    steps:
    - uses: actions/checkout@v2
    - run: git submodule update --init --recursive
    - run: cd fastxpub && make clean && make docker-build && make test && cd ..
    # TODO: cache fast xpub

  karma-chrome:
    needs: ["fastxpub"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
    steps:
    - uses: actions/checkout@v2
    - name: Load node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    # xvfb is required to run karma tests
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum yarn karma-chrome

  karma-firefox:
    needs: ["fastxpub"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
    steps:
    - uses: actions/checkout@v2
    - name: Load node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    # xvfb is required to run karma tests
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum yarn karma-firefox

  